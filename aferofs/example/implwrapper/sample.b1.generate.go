// Code generated by github.com/ngicks/go-f-helper/aferofs/cmd/implwrapper. DO NOT EDIT.
package implwrapper

import (
	"io/fs"
)

func (recv *B1) Close() (err error) {
	err = recv.inner.Close()
	return
}

func (recv *B1) Name() (s string) {
	s = recv.inner.Name()
	return
}

func (recv *B1) Read(p []byte) (n int, err error) {
	n, err = recv.inner.Read(p)
	return
}

func (recv *B1) ReadAt(p []byte, off int64) (n int, err error) {
	n, err = recv.inner.ReadAt(p, off)
	return
}

func (recv *B1) Readdir(count int) (fi []fs.FileInfo, err error) {
	fi, err = recv.inner.Readdir(count)
	return
}

func (recv *B1) Readdirnames(n int) (s []string, err error) {
	s, err = recv.inner.Readdirnames(n)
	return
}

func (recv *B1) Seek(offset int64, whence int) (n int64, err error) {
	n, err = recv.inner.Seek(offset, whence)
	return
}

func (recv *B1) Stat() (fi fs.FileInfo, err error) {
	fi, err = recv.inner.Stat()
	return
}

func (recv *B1) Sync() (err error) {
	err = recv.inner.Sync()
	return
}

func (recv *B1) Truncate(size int64) (err error) {
	err = recv.inner.Truncate(size)
	return
}

func (recv *B1) Write(p []byte) (n int, err error) {
	n, err = recv.inner.Write(p)
	return
}

func (recv *B1) WriteAt(p []byte, off int64) (n int, err error) {
	n, err = recv.inner.WriteAt(p, off)
	return
}

func (recv *B1) WriteString(s string) (n int, err error) {
	n, err = recv.inner.WriteString(s)
	return
}
