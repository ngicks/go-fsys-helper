// Code generated by github.com/ngicks/go-f-helper/aferofs/cmd/implwrapper. DO NOT EDIT.
package implwrapper

import (
	"io/fs"
	"time"

	"github.com/spf13/afero"
)

func (recv *A1) Create(name string) (f afero.File, err error) {
	f, err = recv.inner.Create(name)
	return
}

func (recv *A1) Mkdir(name string, perm fs.FileMode) (err error) {
	err = recv.inner.Mkdir(name, perm)
	return
}

func (recv *A1) MkdirAll(path string, perm fs.FileMode) (err error) {
	err = recv.inner.MkdirAll(path, perm)
	return
}

func (recv *A1) Open(name string) (f afero.File, err error) {
	f, err = recv.inner.Open(name)
	return
}

func (recv *A1) OpenFile(name string, flag int, perm fs.FileMode) (f afero.File, err error) {
	f, err = recv.inner.OpenFile(name, flag, perm)
	return
}

func (recv *A1) Remove(name string) (err error) {
	err = recv.inner.Remove(name)
	return
}

func (recv *A1) RemoveAll(path string) (err error) {
	err = recv.inner.RemoveAll(path)
	return
}

func (recv *A1) Rename(oldname string, newname string) (err error) {
	err = recv.inner.Rename(oldname, newname)
	return
}

func (recv *A1) Stat(name string) (fi fs.FileInfo, err error) {
	fi, err = recv.inner.Stat(name)
	return
}

func (recv *A1) Name() (name string) {
	name = recv.inner.Name()
	return
}

func (recv *A1) Chmod(name string, mode fs.FileMode) (err error) {
	err = recv.inner.Chmod(name, mode)
	return
}

func (recv *A1) Chown(name string, uid int, gid int) (err error) {
	err = recv.inner.Chown(name, uid, gid)
	return
}

func (recv *A1) Chtimes(name string, atime time.Time, mtime time.Time) (err error) {
	err = recv.inner.Chtimes(name, atime, mtime)
	return
}
